# COMPREHENSIVE AI SCORING IMPLEMENTATION & TECHNICAL DEBT REMOVAL

Complete implementation of new 2025+ AI priority scoring with 3-tier B2B system and removal of ALL technical debt, redundant fields, and legacy code.

## 🎯 IMPLEMENTATION OVERVIEW

### NEW SYSTEM:
- **3 B2B Tiers Only:** Pioneer (10-49), Preferred (50-199), Elite (200+)
- **Auto-redirect to Remax.ca** for <10 units
- **100-point normalized scoring** with SLA response times
- **Remove ALL technical debt** and redundant fields

### EXACT SCORING MATRIX (100 POINTS):

| Factor | Weight | Pioneer (10-49) | Preferred (50-199) | Elite (200+) |
|--------|--------|-----------------|-------------------|--------------|
| **Unit Volume** | 50 pts | +15 | +30 | +50 |
| **Government Contracts** | 20 pts | +20 if "Currently participating" | +20 if "Currently participating" | +20 if "Currently participating" |
| **Indigenous Communities** | 15 pts | +15 if Indigenous | +15 if Indigenous | +15 if Indigenous |
| **Priority Provinces** | 10 pts | +10 if AB/BC/ON/NWT | +10 if AB/BC/ON/NWT | +10 if AB/BC/ON/NWT |
| **ESG/Affordability** | 5 pts | +5 if Build Canada eligible | +5 if Build Canada eligible | +5 if Build Canada eligible |
| **Urgency Bonus** | +5 pts | - | +5 if Immediate | +5 if Immediate |

### COMPLETE REMOVAL LIST:
1. ❌ Explorer tier (tier_0_explorer, tier_1_explorer)
2. ❌ Starter tier (tier_1_starter)
3. ❌ "researching" readiness option
4. ❌ project_unit_range field
5. ❌ projectUnitRange state
6. ❌ priority_level field
7. ❌ priorityLevel references
8. ❌ assigned_to field
9. ❌ customer_tags field
10. ❌ "not_qualified" status
11. ❌ qualified/qualification checks
12. ❌ All "I don't know yet" references (already removed)
13. ❌ Old 150-point scoring logic
14. ❌ Complex 9-factor scoring
15. ❌ All penalties and caps

## FILES TO MODIFY:
1. shared/utils/scoring.ts (complete replacement)
2. shared/schema.ts (remove fields & update validation)
3. client/src/components/assessment-form.tsx (add redirect logic)
4. server/routes.ts (clean up payload)
5. server/storage.ts (update webhook)

---

## PART 1: COMPLETE SCORING REPLACEMENT (shared/utils/scoring.ts)

**REPLACE THE ENTIRE FILE CONTENT WITH:**

```typescript
// AI Priority Score Calculation - 2025+ B2B Only (3 Tiers)
// Minimum 10 units - redirect to Remax.ca for residential

import { type AssessmentFormData } from '../schema';

// Frontend form data interface (for compatibility)
export interface FrontendFormData {
  unitCount?: string;
  projectDescription?: string;
  budget?: string;
  budgetRange?: string;
  timeline?: string;
  decisionTimeline?: string;
  province?: string;
  constructionProvince?: string;
  developerType?: string;
  governmentPrograms?: string;
}

// Map frontend field names to backend field names
function mapFrontendToBackend(frontendData: FrontendFormData): Partial<AssessmentFormData> {
  return {
    projectUnitCount: frontendData.unitCount ? parseInt(frontendData.unitCount) || 0 : 0,
    projectDescription: frontendData.projectDescription || '',
    budgetRange: frontendData.budgetRange || frontendData.budget,
    decisionTimeline: frontendData.decisionTimeline || frontendData.timeline,
    constructionProvince: frontendData.constructionProvince || frontendData.province,
    developerType: frontendData.developerType,
    governmentPrograms: frontendData.governmentPrograms
  };
}

// NEW AI Scoring Breakdown - Simplified 5-factor model
export interface AIScoringBreakdown {
  unitVolume: number;      // 50 points max
  government: number;       // 20 points max
  indigenous: number;       // 15 points max
  province: number;         // 10 points max
  esgAffordability: number; // 5 points max
  urgencyBonus: number;     // 5 points bonus
  rawScore: number;         // Before normalization
  normalizedScore: number;  // 0-100 scale
  responseTime: string;     // "2 hours", "6 hours", "24 hours", "72 hours"
  tier: string;            // "pioneer", "preferred", or "elite" ONLY
}

// Get response time based on normalized score
function getResponseTime(normalizedScore: number): string {
  if (normalizedScore >= 80) return "2 hours";
  if (normalizedScore >= 60) return "6 hours";
  if (normalizedScore >= 40) return "24 hours";
  return "72 hours";
}

// Main scoring function - B2B ONLY (10+ units)
export function calculatePriorityScore(data: AssessmentFormData | FrontendFormData): {
  score: number;
  breakdown: AIScoringBreakdown;
} {
  // Map frontend data to backend format if needed
  const backendData = 'unitCount' in data ? mapFrontendToBackend(data as FrontendFormData) : data as AssessmentFormData;

  let score = 0;
  let unitVolumeScore = 0, govScore = 0, indigenousScore = 0, provinceScore = 0,
      esgScore = 0, urgencyBonus = 0;

  // Parse unit count
  let units = 0;
  const unitValue = backendData.projectUnitCount;
  if (unitValue !== undefined && unitValue !== null) {
    if (typeof unitValue === 'string' && unitValue !== '') {
      const parsed = parseInt(unitValue);
      units = isNaN(parsed) ? 0 : Math.max(0, Math.min(parsed, 10000));
    } else if (typeof unitValue === 'number') {
      units = Math.max(0, Math.min(unitValue, 10000));
    }
  }

  // Determine tier (3-tier B2B system)
  // NOTE: <10 units should be redirected to Remax on frontend
  let tier = '';
  if (units >= 200) {
    tier = 'elite';
  } else if (units >= 50 && units <= 199) {
    tier = 'preferred';
  } else if (units >= 10 && units <= 49) {
    tier = 'pioneer';
  } else {
    // Fallback if somehow <10 units reach here
    console.warn('⚠️ Units < 10 reached scoring. Should redirect to Remax.ca');
    tier = 'pioneer';
    units = 10;
  }

  // Extract data
  const timeline = String(backendData.decisionTimeline || "");
  const province = String(backendData.constructionProvince || "");
  const devType = String(backendData.developerType || "");
  const govPrograms = String(backendData.governmentPrograms || "");

  // 1. UNIT VOLUME (50 points max)
  switch (tier) {
    case 'pioneer':      // 10-49 units
      unitVolumeScore = 15;
      score += 15;
      break;
    case 'preferred':    // 50-199 units
      unitVolumeScore = 30;
      score += 30;
      break;
    case 'elite':        // 200+ units
      unitVolumeScore = 50;
      score += 50;
      break;
  }

  // Urgency bonus for immediate timeline + high volume (preferred or elite)
  if (timeline === "Immediate (0-3 months)" && (tier === 'preferred' || tier === 'elite')) {
    urgencyBonus = 5;
    score += 5;
  }

  // 2. GOVERNMENT CONTRACTS (20 points)
  if (govPrograms === "Currently participating") {
    govScore = 20;
    score += 20;
  }

  // 3. INDIGENOUS COMMUNITIES (15 points)
  if (devType === "Indigenous Community/Organization") {
    indigenousScore = 15;
    score += 15;
  }

  // 4. PRIORITY PROVINCES (10 points)
  const priorityProvinces = ["Alberta", "British Columbia", "Ontario", "Northwest Territories"];
  if (priorityProvinces.includes(province)) {
    provinceScore = 10;
    score += 10;
  }

  // 5. ESG/BUILD CANADA (5 points)
  const isBuildCanadaEligible =
    units >= 50 ||
    devType === "Indigenous Community/Organization" ||
    devType === "Government/Municipal Developer" ||
    govPrograms === "Currently participating" ||
    govPrograms === "Very interested";

  if (isBuildCanadaEligible) {
    esgScore = 5;
    score += 5;
  }

  // Normalize score
  const rawScore = score;
  const normalizedScore = Math.min(100, score);
  const responseTime = getResponseTime(normalizedScore);

  const breakdown: AIScoringBreakdown = {
    unitVolume: unitVolumeScore,
    government: govScore,
    indigenous: indigenousScore,
    province: provinceScore,
    esgAffordability: esgScore,
    urgencyBonus: urgencyBonus,
    rawScore: rawScore,
    normalizedScore: normalizedScore,
    responseTime: responseTime,
    tier: tier
  };

  console.log('🎯 AI Priority Score (2025+):', {
    tier,
    units,
    normalizedScore,
    responseTime,
    breakdown
  });

  return { score: normalizedScore, breakdown };
}

// Customer tier determination - 3 TIERS ONLY
export function determineCustomerTier(units: number): string {
  if (units >= 200) return 'tier_4_elite';
  if (units >= 50 && units <= 199) return 'tier_3_preferred';
  if (units >= 10 && units <= 49) return 'tier_2_pioneer';

  // Should not reach here - redirect to Remax
  console.warn('determineCustomerTier: Units < 10, should redirect');
  return 'tier_2_pioneer';
}

// Build Canada eligibility
export function isBuildCanadaEligible(data: AssessmentFormData | FrontendFormData): boolean {
  const backendData = 'unitCount' in data ? mapFrontendToBackend(data as FrontendFormData) : data as AssessmentFormData;

  let units = 0;
  const unitValue = backendData.projectUnitCount;
  if (unitValue !== undefined && unitValue !== null) {
    units = typeof unitValue === 'number' ? unitValue : parseInt(unitValue) || 0;
  }

  const devType = String(backendData.developerType || "");
  const govPrograms = String(backendData.governmentPrograms || "");

  return units >= 50 ||
         devType === "Indigenous Community/Organization" ||
         devType === "Government/Municipal Developer" ||
         govPrograms === "Currently participating" ||
         govPrograms === "Very interested";
}

// REMOVE ALL OLD FUNCTIONS AND EXPORTS
// No more: ScoringBreakdown, old calculatePriorityScore logic, Explorer/Starter logic
```

---

## PART 2: SCHEMA CLEANUP (shared/schema.ts)

**CHANGE 1: Remove projectUnitRange and priorityLevel**

FIND AND DELETE (line ~100):
```typescript
projectUnitRange: z.string().optional(),
```

ALSO in the database schema section (line ~28), REMOVE:
```typescript
priorityLevel: text("priority_level").notNull(),
```

**CHANGE 2: Remove "researching" from readiness**

FIND (line ~35-41):
```typescript
readiness: z.enum([
  "researching",
  "planning-long",
  "planning-medium",
  "planning-short",
  "immediate"
])
```

REPLACE WITH:
```typescript
readiness: z.enum([
  "planning-long",     // 12+ months
  "planning-medium",   // 6-12 months
  "planning-short",    // 3-6 months
  "immediate"          // 0-3 months
])
```

**CHANGE 3: Add minimum units validation**

FIND (line ~97-99):
```typescript
projectUnitCount: z.number()
  .min(0, "Please select the number of units for your project")
  .max(10000, "Number of units must be 10,000 or less"),
```

REPLACE WITH:
```typescript
projectUnitCount: z.number()
  .min(10, "Minimum 10 units required. For residential projects, visit Remax.ca")
  .max(10000, "Number of units must be 10,000 or less"),
```

**CHANGE 4: Remove Explorer tier logic**

FIND AND UPDATE the superRefine section (lines ~204-270):

REMOVE all references to:
- `isExplorerTier`
- `learningInterest` required checks
- `informationPreference` required checks

The superRefine should only validate fields for actual B2B submissions (10+ units).

---

## PART 3: FRONTEND REDIRECT IMPLEMENTATION (assessment-form.tsx)

**CHANGE 1: Fix TypeScript types and add redirect timer state**

FIND (line ~58):
```typescript
type TierType = 'tier_0_explorer' | 'tier_1_starter' | 'tier_2_pioneer' | 'tier_3_preferred' | 'tier_4_elite';
```

REPLACE WITH:
```typescript
type TierType = 'tier_2_pioneer' | 'tier_3_preferred' | 'tier_4_elite';
```

FIND (line ~70):
```typescript
const [customerTier, setCustomerTier] = useState<TierType>('tier_0_explorer');
```

REPLACE WITH:
```typescript
const [customerTier, setCustomerTier] = useState<TierType>('tier_2_pioneer');
```

ADD near other state declarations (line ~50-100):
```typescript
const [redirectTimer, setRedirectTimer] = useState<NodeJS.Timeout | null>(null);

// Cleanup timer on unmount
useEffect(() => {
  return () => {
    if (redirectTimer) clearTimeout(redirectTimer);
  };
}, [redirectTimer]);
```

**CHANGE 2: Add validation with redirect**

FIND the validation function (around line 575) and ADD:
```typescript
// B2B MINIMUM - REDIRECT TO REMAX
const unitCount = parseInt(formData.unitCount) || 0;
if (unitCount > 0 && unitCount < 10) {
  const redirectConfirm = window.confirm(
    'Projects under 10 units are handled by our partner Remax.\n\n' +
    'Click OK to go to Remax.ca now, or Cancel to stay.'
  );

  if (redirectConfirm) {
    window.location.href = 'https://www.remax.ca/';
  } else {
    newErrors.unitCount = 'Minimum 10 units required. Visit Remax.ca for residential projects.';
  }
  return false;
}
```

**CHANGE 3: Add onBlur redirect to unit input**

FIND the unit count input field and UPDATE:
```typescript
<input
  type="number"
  name="unitCount"
  value={formData.unitCount}
  onChange={handleChange}
  onBlur={(e) => {
    const units = parseInt(e.target.value) || 0;
    if (units > 0 && units < 10) {
      const timer = setTimeout(() => {
        if (window.confirm('Redirecting to Remax.ca for residential projects.\n\nOK to continue, Cancel to stay.')) {
          window.location.href = 'https://www.remax.ca/';
        }
      }, 3000);
      setRedirectTimer(timer);
    }
  }}
  min="10"
  className="..."
/>
```

**CHANGE 4: Add warning banner**

ADD after the unit count input:
```typescript
{formData.unitCount && parseInt(formData.unitCount) < 10 && parseInt(formData.unitCount) > 0 && (
  <div className="mt-2 p-3 bg-blue-50 border border-blue-200 rounded-md">
    <p className="text-blue-700 text-sm font-medium">
      Residential Project Detected
    </p>
    <p className="text-blue-600 text-xs mt-1">
      Projects under 10 units are handled by Remax. Redirecting in 3 seconds...
    </p>
    <a href="https://www.remax.ca/" className="text-blue-700 text-xs underline mt-2 inline-block">
      Go to Remax.ca now →
    </a>
  </div>
)}
```

**CHANGE 5: Update scoring calculation**

FIND where calculatePriorityScore is called and ensure it uses the new AIScoringBreakdown:
```typescript
const { score, breakdown } = calculatePriorityScore(scoringData);
setPriorityScore(score); // Now 0-100 instead of 0-150

// IMPORTANT: Preserve existing analytics tracking
trackUnitCountSelection(units);
trackCustomerTierDetermination(breakdown.tier);
```

**CHANGE 6: Update payload**

UPDATE the form submission payload:
```typescript
const payload = {
  // ... existing fields
  aiPriorityScore: priorityScore,  // 0-100 normalized
  responseTime: breakdown.responseTime,  // SLA from scoring
  customerTier: breakdown.tier,  // "pioneer", "preferred", or "elite"
  priorityScore,  // Keep for now (legacy)
  // REMOVE: projectUnitRange, priorityLevel, assignedTo, qualified
};
```

**CHANGE 7: Remove all Explorer/Starter tier displays**

SEARCH AND REMOVE all references to:
- "Explorer" tier
- "Starter" tier
- tier_0_explorer
- tier_1_starter
- "researching" options

Only display:
- Pioneer Tier (10-49 units)
- Preferred Tier (50-199 units)
- Elite Tier (200+ units)

---

## PART 4: BACKEND CLEANUP (server/routes.ts)

**CHANGE 1: Remove redundant normalizations**

REMOVE or simplify any complex tier mapping logic. The new system only has:
```typescript
const normalizeTier = (tier: string): string => {
  switch(tier) {
    case 'pioneer':
    case 'tier_pioneer':
      return 'pioneer';
    case 'preferred':
    case 'tier_preferred':
      return 'preferred';
    case 'elite':
    case 'tier_elite':
      return 'elite';
    default:
      return 'pioneer'; // Default to minimum B2B tier
  }
};
```

**CHANGE 2: Clean up webhook data**

REMOVE these field mappings:
- projectUnitRange
- priorityLevel
- assignedTo
- Any "qualification" checks

ADD/UPDATE:
```typescript
aiPriorityScore: frontendData.aiPriorityScore || frontendData.priorityScore,
responseTime: frontendData.responseTime || "24 hours",
customerTier: normalizeTier(frontendData.customerTier)
```

---

## PART 5: WEBHOOK CLEANUP (server/storage.ts)

**CHANGE 1: Remove all Explorer/Starter logic**

REMOVE all references to:
- tier_0_explorer
- tier_1_starter
- is_educational_lead
- is_education_only

**CHANGE 2: Simplify tier handling**

UPDATE all tier checks to only handle:
- tier_pioneer / pioneer
- tier_preferred / preferred
- tier_elite / elite

**CHANGE 3: Update webhook payload**

ENSURE webhook sends:
```typescript
{
  // Core fields
  ai_priority_score: normalizedScore,  // 0-100
  response_time: responseTime,  // "2 hours", etc.
  customer_tier: tier,  // simplified tier name

  // REMOVE these:
  // priority_level
  // assigned_to
  // customer_tags (use tags_array instead)
  // qualification status

  // Keep existing contact info, etc.
}
```

**CHANGE 4: Update Build Canada logic**

```typescript
const buildCanadaEligible = units >= 50 ||
  data.developerType === "Indigenous Community/Organization" ||
  data.developerType === "Government/Municipal Developer" ||
  data.governmentPrograms === "Currently participating" ||
  data.governmentPrograms === "Very interested";
```

---

## TECHNICAL DEBT REMOVED

### ❌ COMPLETELY REMOVED:
1. Explorer tier (all references)
2. Starter tier (all references)
3. "researching" readiness
4. project_unit_range field
5. projectUnitRange state
6. priority_level field
7. assigned_to field
8. customer_tags field
9. "not_qualified" status
10. qualified/qualification logic
11. 150-point scoring system
12. 9-factor complex scoring
13. Penalties and caps
14. is_educational_lead logic
15. learningInterest requirements for B2B
16. informationPreference requirements for B2B
17. All "I don't know yet" options
18. Score=0 for unqualified leads
19. Form blocking (replaced with redirect)

### ✅ NEW CLEAN IMPLEMENTATION:
1. 3-tier B2B system only
2. 100-point normalized scoring
3. 5-factor simplified scoring
4. SLA response times
5. Auto-redirect to Remax for <10 units
6. Clean webhook payload
7. Simplified tier names
8. No redundant fields

---

## TESTING CHECKLIST

### Redirect Testing:
- [ ] Enter <10 units → see warning banner
- [ ] Leave field with <10 units → 3-second timer starts
- [ ] Confirmation dialog appears before redirect
- [ ] Can cancel redirect
- [ ] Direct link to Remax works
- [ ] Form won't submit with <10 units

### Scoring Testing:
- [ ] Pioneer tier (10-49) scores correctly
- [ ] Preferred tier (50-199) scores correctly
- [ ] Elite tier (200+) scores correctly
- [ ] Response times map correctly
- [ ] Score normalized to 0-100

### Cleanup Testing:
- [ ] No Explorer/Starter references remain
- [ ] No "researching" option
- [ ] No qualification checks
- [ ] Webhook sends clean payload
- [ ] No TypeScript errors

---

## SUCCESS METRICS

After implementation:
- ✅ Only B2B leads (10+ units) in CRM
- ✅ Residential leads go to Remax
- ✅ Clean 3-tier structure
- ✅ Simplified scoring (5 factors vs 9)
- ✅ Clear SLA response times
- ✅ No technical debt
- ✅ No redundant fields
- ✅ Cleaner codebase

---

## DEPLOYMENT NOTES

1. **Test redirect thoroughly** - ensure Remax.ca loads correctly
2. **Monitor first few submissions** - verify only 10+ units reach backend
3. **Check GHL mapping** - ensure new fields map correctly
4. **Verify SLA triggers** - response_time should trigger workflows
5. **Clean historical data** - optional migration for old tier names

This implementation removes ALL technical debt, simplifies the entire scoring system, and creates a clean B2B-only platform with automatic residential redirect.

---

## ✅ VERIFICATION: EXACT SCORING IMPLEMENTATION

This comprehensive update ensures:

1. **Exact Tier Ranges:**
   - Pioneer: 10-49 units (tier_2_pioneer)
   - Preferred: 50-199 units (tier_3_preferred)
   - Elite: 200+ units (tier_4_elite)

2. **Exact Point Allocation:**
   - Unit Volume: 15/30/50 points by tier
   - Government: 20 points if participating
   - Indigenous: 15 points for Indigenous orgs
   - Province: 10 points for AB/BC/ON/NWT
   - ESG: 5 points if Build Canada eligible
   - Urgency: +5 for Preferred/Elite with immediate timeline

3. **Complete Removal of:**
   - ALL Explorer tier references
   - ALL Starter tier references
   - "researching" readiness option
   - 19+ redundant fields and technical debt

4. **Auto-Redirect Implementation:**
   - Projects <10 units → Remax.ca
   - 3-second timer with confirmation
   - No blocking, no "not qualified" status

The scoring algorithm now precisely matches the 2025+ requirements with normalized 100-point scoring and clear SLA response times.

---

## 🔒 SECURITY VERIFICATION

### All Enterprise Security Measures PRESERVED:
1. **CSRF Protection** - Maintained in assessment-form.tsx
2. **Input Sanitization** - DOMPurify still active
3. **Rate Limiting** - Express middleware unchanged
4. **IP Tracking** - Duplicate prevention functional
5. **Validation** - Enhanced with min 10 units
6. **Phone Validation** - Canadian format preserved
7. **Helmet/CORS** - Security headers intact

### No New Vulnerabilities:
- Redirect uses `window.confirm()` for user consent
- No direct URL manipulation
- All inputs validated before processing
- Webhook payload sanitized

This implementation maintains 100% of existing security measures while adding the new scoring system.