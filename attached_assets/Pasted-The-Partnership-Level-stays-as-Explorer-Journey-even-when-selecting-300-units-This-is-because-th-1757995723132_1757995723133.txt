The Partnership Level stays as "Explorer Journey" even when selecting 300+ units. This is because the tier calculation needs the READINESS value to work properly, but it's not being checked when units change.

FIND AND REPLACE the calculateTier() function with this corrected version:

function calculateTier() {
    // Get both values
    const units = document.getElementById('unitCount').value;
    const readiness = document.getElementById('readiness')?.value || '';
    
    // Debug to console
    console.log('calculateTier called - Units:', units, 'Readiness:', readiness);
    
    // CRITICAL FIX: If readiness is not selected yet, don't force Explorer
    // Only force Explorer if explicitly "researching" or "planning-long"
    if (!readiness && units && parseInt(units) > 0) {
        // User selected units but hasn't selected readiness yet
        // Calculate tier based on units alone for preview
        const unitCount = parseInt(units);
        
        let tier;
        if (unitCount >= 300) tier = 'tier_4_elite';
        else if (unitCount >= 150) tier = 'tier_3_preferred';
        else if (unitCount >= 50) tier = 'tier_2_pioneer';
        else if (unitCount >= 1) tier = 'tier_1_starter';
        else tier = 'tier_0_explorer';
        
        updateTierDisplay(tier);
        return;
    }
    
    // Normal flow when both fields have values
    const tier = determineCustomerTier(units, readiness);
    updateTierDisplay(tier);
    
    // Check agent support
    checkAgentSupport();
}

// ADD this helper function to update the display:
function updateTierDisplay(tier) {
    const tierConfig = {
        'tier_0_explorer': {
            badge: 'Explorer Journey',
            class: 'tier-explorer',
            description: 'Perfect! Start your modular home education journey.',
            response: 'Educational resources at your pace'
        },
        'tier_1_starter': {
            badge: 'Starter Partnership',
            class: 'tier-starter',
            description: 'Great! Personal consultation and support await.',
            response: 'Personal consultation support'
        },
        'tier_2_pioneer': {
            badge: 'Pioneer Partnership',
            class: 'tier-pioneer',
            description: 'Excellent! Priority partnership attention.',
            response: 'Priority partnership attention'
        },
        'tier_3_preferred': {
            badge: 'Preferred Partnership',
            class: 'tier-preferred',
            description: 'Outstanding! Senior team ready.',
            response: 'Expedited senior team handling'
        },
        'tier_4_elite': {
            badge: 'Elite Partnership',
            class: 'tier-elite',
            description: 'VIP Status! Executive engagement confirmed.',
            response: 'Executive VIP engagement'
        }
    };
    
    const config = tierConfig[tier];
    
    // Update badge
    const badge = document.getElementById('tierBadge');
    if (badge) {
        badge.textContent = config.badge;
        badge.className = `tier-badge ${config.class}`;
    }
    
    // Update description
    const description = document.getElementById('tierDescription');
    if (description) {
        description.innerHTML = `<strong>${config.description}</strong><br>${config.response}`;
    }
    
    // Show the indicator
    const indicator = document.getElementById('tierIndicator');
    if (indicator) {
        indicator.classList.add('show');
    }
    
    // Adjust form fields
    adjustFormFields(tier);
}

ALSO CHECK: Make sure the unitCount select element has the onchange event:
<select id="unitCount" name="unitCount" required onchange="calculateTier()">

AND CHECK: The readiness field should also trigger calculation:
<select id="readiness" name="readiness" required onchange="handleReadinessChange()">

If readiness field is on a different step/page than units, modify the logic to handle this:

function calculateTier() {
    const units = document.getElementById('unitCount').value;
    const readinessElement = document.getElementById('readiness');
    
    // If readiness field doesn't exist yet (different step), calculate based on units only
    if (!readinessElement) {
        const unitCount = parseInt(units) || 0;
        let tier;
        
        if (unitCount === 0) tier = 'tier_0_explorer';
        else if (unitCount <= 49) tier = 'tier_1_starter';
        else if (unitCount <= 149) tier = 'tier_2_pioneer';
        else if (unitCount <= 299) tier = 'tier_3_preferred';
        else tier = 'tier_4_elite';
        
        updateTierDisplay(tier);
        return;
    }
    
    // Normal flow with both fields
    const readiness = readinessElement.value;
    const tier = determineCustomerTier(units, readiness);
    updateTierDisplay(tier);
}

TEST by:
1. Select "300+ units (Elite)" - should show "Elite Partnership"
2. If it still shows "Explorer Journey", check browser console for errors
3. Make sure the calculateTier() function is being called (check console logs)