ILLUMMAA Company Field Enhancement - Complete Safe Implementation for Replit
Instructions: This modification makes the company field OPTIONAL for Starter tier (1-49 units) while keeping it REQUIRED for larger tiers. This maintains frontend-backend synchronization without breaking existing validation.
Step 1: Locate Step 3 in assessment-form.tsx
Find the section where currentStep === 3 (around line 800-900)
Step 2: Replace ONLY the Company Field Section
Find the company field section within Step 3 and replace it with this enhanced version:
typescript{/* Company Field - Smart Display Based on Tier */}
{(customerTier && customerTier !== 'tier_0_explorer') && (
  <div>
    <label className="block text-sm font-medium text-gray-700 mb-2">
      Company/Organization 
      {customerTier !== 'tier_1_starter' && <span className="text-red-500 ml-1">*</span>}
      {customerTier === 'tier_1_starter' && <span className="text-gray-500 ml-2">(Optional)</span>}
    </label>
    <input
      type="text"
      name="company"
      id="company"
      value={formData.company}
      onChange={handleInputChange}
      required={customerTier !== 'tier_1_starter'}
      placeholder={
        customerTier === 'tier_1_starter' 
          ? "Company name (if applicable)" 
          : "Company/Organization name"
      }
      className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 transition-colors"
      aria-label="Company or organization name"
    />
    {errors.company && (
      <p className="mt-1 text-xs text-red-600" role="alert">{errors.company}</p>
    )}
    {/* Helper text based on tier */}
    <p className="mt-1 text-xs text-gray-500">
      {customerTier === 'tier_1_starter' && "Optional for individuals/families. Recommended for business entities."}
      {customerTier === 'tier_2_pioneer' && "Required for partnership inquiries (50-149 units)"}
      {customerTier === 'tier_3_preferred' && "Required for preferred partnership (150-299 units)"}
      {customerTier === 'tier_4_elite' && "Required for elite partnership (300+ units)"}
    </p>
  </div>
)}
Step 3: Update the Validation Logic
Find the validateStep function and update ONLY the company validation part in case 3:
typescriptcase 3:
  // ... keep existing validation for firstName, lastName, email, phone ...
  
  // Company validation - Required only for Pioneer tier and above
  const companyRequired = customerTier !== 'tier_0_explorer' && customerTier !== 'tier_1_starter';
  
  if (companyRequired && !formData.company?.trim()) {
    if (customerTier === 'tier_2_pioneer') {
      newErrors.company = 'Company name is required for partnership inquiries (50+ units)';
    } else if (customerTier === 'tier_3_preferred') {
      newErrors.company = 'Company name is required for preferred partnership (150+ units)';
    } else if (customerTier === 'tier_4_elite') {
      newErrors.company = 'Company name is required for elite partnership (300+ units)';
    } else {
      newErrors.company = 'Company name is required';
    }
  }
  
  // No validation error for Starter tier - company is optional
  break;
What This Implementation Does:

Shows company field for all non-Explorer tiers (1+ units)
Makes it OPTIONAL for Starter tier (1-49 units) with "(Optional)" label
Keeps it REQUIRED for Pioneer+ tiers (50+ units) with red asterisk
Provides clear helper text explaining requirements per tier
Maintains backend compatibility - no backend changes needed

Security Features Maintained:

✅ Input sanitization through existing handleInputChange
✅ XSS protection via React's built-in escaping
✅ ARIA labels for accessibility
✅ Proper validation that doesn't break backend expectations
✅ No SQL injection risk (no database queries)

Business Logic After This Change:

Explorer (0 units): No company field shown
Starter (1-49 units): Company field shown but OPTIONAL
Pioneer (50-149 units): Company field shown and REQUIRED
Preferred (150-299 units): Company field shown and REQUIRED
Elite (300+ units): Company field shown and REQUIRED

Why This is Safe:

Backend already accepts empty company field for some cases
No changes to webhook payload structure
Validation remains tier-based (consistent with system architecture)
All existing functionality preserved
No risk of frontend-backend desynchronization

This implementation provides the flexibility needed for small buyers while maintaining enterprise-level security and system integrity.